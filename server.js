// const fs = require("fs");
// const express = require("express");
// const http = require("http");

const WebSocket = require("ws");
const path = require("path");

// const { Server } = require("socket.io");

// const app = express();
// const server = http.createServer(app);
// const io = new Server(server);
// const wss = new WebSocket.Server({ server });

// app.use(express.static(path.join(__dirname, "client")));
const express = require("express"); //Строки 13-19 для подключения по IP
const http = require("http");
const { Server } = require("socket.io");

const app = express();
const server = http.createServer(app);
const io = new Server(server);

const PORT = 3000;

const card = {
  word: "",
  type: "",
  revealed: false,
};
// const lines = ;
// const wordList = fs
//   .readFileSync("./model/words.txt", "utf-8")
//   .toString()
//   .split(/\r?\n/)
//   .map((word) => word.trim())
//   .filter((word) => word !== "");
const wordList = [
  "автомат",
  "агент",
  "адвокат",
  "акт",
  "актёр",
  "акция",
  "альбом",
  "Америка",
  "амфибия",
  "ангел",
  "Англия",
  "аппарат",
  "арена",
  "атлас",
  "атлет",
  "аэропорт",
  "Африка",
  "бабочка",
  "бумага",
  "багет",
  "база",
  "баланс",
  "банк",
  "банка",
  "баня",
  "бар",
  "барак",
  "барьер",
  "бассейн",
  "батарея",
  "Бах",
  "башня",
  "белки",
  "белый",
  "берёза",
  "Берлин",
  "билет",
  "биржа",
  "битва",
  "блин",
  "блок",
  "боб",
  "боевик",
  "бокс",
  "болезнь",
  "больница",
  "бомба",
  "боров",
  "бор",
  "борт",
  "ботинок",
  "бочка",
  "брак",
  "бревно",
  "бубны",
  "бумага",
  "бутылка",
  "бычок",
  "бюст",
  "вагон",
  "варенье",
  "вал",
  "ведьма",
  "век",
  "великан",
  "венец",
  "вера",
  "вертолёт",
  "верфь",
  "вес",
  "весна",
  "ветер",
  "вечер",
  "взгляд",
  "вид",
  "вилка",
  "вирус",
  "виски",
  "вода",
  "вино",
  "водка",
  "водолаз",
  "вождь",
  "воздух",
  "война",
  "волна",
  "воля",
  "вор",
  "ворот",
  "ворота",
  "врач",
  "время",
  "выпечка",
  "высота",
  "выступление",
  "гавань",
  "газ",
  "газель",
  "галоп",
  "гвоздь",
  "гений",
  "герб",
  "Германия",
  "герой",
  "гигант",
  "глаз",
  "Голливуд",
  "голова",
  "голос",
  "голубь",
  "гольф",
  "гора",
  "горло",
  "горн",
  "город",
  "Горький",
  "град",
  "гранат",
  "гранит",
  "гребень",
  "Греция",
  "гриф",
  "группа",
  "груша",
  "губа",
  "губка",
  "гусеница",
  "дама",
  "дача",
  "двор",
  "дворник",
  "день",
  "дерево",
  "десна",
  "динозавр",
  "диск",
  "дождь",
  "доза",
  "доктор",
  "долг",
  "доля",
  "дракон",
  "драма",
  "дробь",
  "дружба",
  "дуб",
  "дума",
  "духи",
  "дыра",
  "дятел",
  "Египет",
  "единорог",
  "ёж",
  "ёлка",
  "ёрш",
  "жасмин",
  "железо",
  "жизнь",
  "жила",
  "журавль",
  "жучок",
  "забор",
  "завод",
  "заговор",
  "закат",
  "залив",
  "залог",
  "замок",
  "заноза",
  "запад",
  "запах",
  "заяц",
  "звезда",
  "звонок",
  "звук",
  "зебра",
  "зелень",
  "земля",
  "зерно",
  "зима",
  "змей",
  "знак",
  "золото",
  "зона",
  "зуб",
  "игла",
  "игра",
  "икра",
  "Индия",
  "институт",
  "инструмент",
  "ирис",
  "искра",
  "источник",
  "истребитель",
  "кабачок",
  "кабинет",
  "кавалер",
  "кадр",
  "казино",
  "камень",
  "камера",
  "канал",
  "кант",
  "капитан",
  "карабин",
  "карлик",
  "карта",
  "каток",
  "колесо",
  "коньяк",
  "каша",
  "квадрат",
  "кенгуру",
  "кентавр",
  "кетчуп",
  "киви",
  "кино",
  "кисть",
  "кит",
  "Китай",
  "класс",
  "клетка",
  "клинок",
  "клуб",
  "клык",
  "ключ",
  "кнопка",
  "козёл",
  "код",
  "кокетка",
  "кол",
  "колода",
  "колонка",
  "колонна",
  "кольцо",
  "команда",
  "комета",
  "конёк",
  "контрабандист",
  "концерт",
  "кора",
  "корабль",
  "корень",
  "корова",
  "королева",
  "король",
  "корона",
  "коса",
  "космос",
  "кость",
  "костюм",
  "косяк",
  "кот",
  "котелок",
  "кошка",
  "край",
  "кран",
  "крепость",
  "крест",
  "кровать",
  "крокодил",
  "кролик",
  "крона",
  "крошка",
  "круг",
  "крыло",
  "куб",
  "кулак",
  "курорт",
  "курс",
  "куст",
  "лавка",
  "лад",
  "ладья",
  "лазер",
  "лама",
  "лампа",
  "ласка",
  "лебедь",
  "лев",
  "легенда",
  "лёд",
  "лезвие",
  "лейка",
  "лес",
  "лето",
  "лимон",
  "лимузин",
  "линейка",
  "линия",
  "липа",
  "лист",
  "лицо",
  "ложе",
  "ложка",
  "лом",
  "Лондон",
  "лопатка",
  "лот",
  "лошадь",
  "лук",
  "луна",
  "луч",
  "любовь",
  "магазин",
  "мак",
  "малина",
  "мамонт",
  "мантия",
  "мандарин",
  "марка",
  "марс",
  "марш",
  "маска",
  "масло",
  "масса",
  "мастер",
  "мат",
  "машина",
  "маяк",
  "мёд",
  "медведь",
  "мелочь",
  "место",
  "метеор",
  "механизм",
  "меч",
  "мечта",
  "микроскоп",
  "миллионер",
  "мина",
  "мир",
  "модель",
  "модуль",
  "молния",
  "моль",
  "море",
  "морковь",
  "мороженое",
  "Москва",
  "мост",
  "мотив",
  "музыка",
  "мука",
  "мушке",
  "мышь",
  "мята",
  "мяч",
  "надежда",
  "налёт",
  "Наполеон",
  "наряд",
  "небо",
  "небоскрёб",
  "ниндзя",
  "нитка",
  "нога",
  "нож",
  "номер",
  "норка",
  "нос",
  "носок",
  "нота",
  "ночь",
  "няня",
  "обезьяна",
  "область",
  "облом",
  "образ",
  "образование",
  "обрез",
  "обувь",
  "овал",
  "овсянка",
  "огонь",
  "огороды",
  "одежда",
  "океан",
  "окно",
  "олень",
  "олигарх",
  "Олимп",
  "омлет",
  "опера",
  "операция",
  "опыт",
  "орган",
  "орден",
  "орёл",
  "орех",
  "осень",
  "осьминог",
  "отель",
  "отрава",
  "охранник",
  "очки",
  "падение",
  "палата",
  "палец",
  "палочка",
  "панама",
  "панель",
  "пара",
  "парад",
  "парашют",
  "Париж",
  "парк",
  "партия",
  "пассаж",
  "патрон",
  "паук",
  "пачка",
  "перевод",
  "переворот",
  "перемена",
  "перец",
  "перо",
  "перчатка",
  "печать",
  "пики",
  "пила",
  "пилот",
  "пингвин",
  "пирамида",
  "пират",
  "пистолет",
  "письмо",
  "Питер",
  "пластик",
  "плата",
  "платформа",
  "платье",
  "плёнка",
  "плитка",
  "плод",
  "пломба",
  "площадь",
  "пляж",
  "побег",
  "победа",
  "повар",
  "погон",
  "похмелье",
  "подарок",
  "подкова",
  "подъём",
  "поезд",
  "покров",
  "пол",
  "поле",
  "полет",
  "полис",
  "полиция",
  "полоса",
  "помёт",
  "помпа",
  "порода",
  "порох",
  "порт",
  "посол",
  "пост",
  "поток",
  "почка",
  "пояс",
  "право",
  "праздник",
  "преграда",
  "предложение",
  "предмет",
  "пресс",
  "преступник",
  "прибор",
  "привод",
  "призрак",
  "принцесса",
  "пришелец",
  "проба",
  "пробка",
  "провод",
  "проводник",
  "программа",
  "проказа",
  "прокат",
  "проспект",
  "профиль",
  "путешествие",
  "путь",
  "Пушкин",
  "пятачок",
  "радуга",
  "разведчик",
  "развод",
  "разворот",
  "разряд",
  "рак",
  "ракета",
  "раковина",
  "рассказ",
  "раствор",
  "резина",
  "река",
  "ресторан",
  "рецепт",
  "Рим",
  "риф",
  "робот",
  "рог",
  "род",
  "роза",
  "рок",
  "роман",
  "Россия",
  "рот",
  "рояль",
  "ртуть",
  "рубашка",
  "рубка",
  "ружье",
  "рука",
  "рукав",
  "рулетка",
  "ручка",
  "рыба",
  "рынок",
  "рысь",
  "рыцарь",
  "сад",
  "салат",
  "салют",
  "самолет",
  "сантехник",
  "Сатурн",
  "сачок",
  "свет",
  "свеча",
  "свидетель",
  "секрет",
  "секция",
  "секта",
  "сердце",
  "сеть",
  "сидение",
  "сила",
  "сирень",
  "скала",
  "скат",
  "склад",
  "скрипка",
  "слава",
  "слон",
  "смена",
  "смерть",
  "снаряд",
  "снег",
  "снеговик",
  "снимок",
  "собака",
  "сова",
  "совет",
  "солдат",
  "солнце",
  "соль",
  "сон",
  "состав",
  "союз",
  "сплав",
  "спорт",
  "спутник",
  "среда",
  "ссылка",
  "ставка",
  "стадион",
  "стан",
  "станок",
  "ствол",
  "стекло",
  "стена",
  "стойка",
  "стол",
  "столб",
  "стопа",
  "стопка",
  "страна",
  "стрела",
  "строй",
  "строчка",
  "струна",
  "студент",
  "стул",
  "ступень",
  "судьба",
  "супергерой",
  "сфера",
  "схема",
  "счёт",
  "съезд",
  "таз",
  "такса",
  "такт",
  "танец",
  "танк",
  "тарелка",
  "тату",
  "театр",
  "телега",
  "телескоп",
  "телефон",
  "тень",
  "тепло",
  "техника",
  "течение",
  "тигр",
  "титан",
  "титул",
  "ткань",
  "ток",
  "том",
  "точка",
  "трава",
  "треугольник",
  "тройка",
  "труба",
  "труд",
  "туба",
  "тур",
  "удар",
  "ударник",
  "удача",
  "удел",
  "узел",
  "Урал",
  "ура",
  "урна",
  "уровень",
  "утка",
  "утконос",
  "утро",
  "учёный",
  "учитель",
  "фаза",
  "факел",
  "фаланга",
  "феникс",
  "ферма",
  "фига",
  "финка",
  "флейта",
  "фокус",
  "фонтан",
  "форма",
  "хвост",
  "хлопок",
  "холод",
  "царь",
  "цветок",
  "Цезарь",
  "центр",
  "церковь",
  "цилиндр",
  "частица",
  "часы",
  "черви",
  "честь",
  "шайба",
  "шайка",
  "шар",
  "шах",
  "шашка",
  "шина",
  "шишка",
  "шкала",
  "школа",
  "шоколад",
  "шпагат",
  "шпилька",
  "шпион",
  "штат",
  "шуба",
  "шум",
  "экран",
  "электрик",
  "элемент",
  "эльф",
  "эфир",
  "Юпитер",
  "юрист",
  "яблоко",
  "ягода",
  "яд",
  "ядро",
  "язык",
  "яичница",
  "якорь",
  "Япония",
  "ясли",
  "ячмень",
];

let gameState = {
  players: [],
  master: null,
  cards: [],
  redLeft: 9,
  blueLeft: 8,
  gameOver: false,
  associationRed: [],
  associationBlue: [],
  gameStage: 0,
};

io.on("connection", (socket) => {
  console.log("Новое подключение: ", socket.id);

  socket.on("printAssociation", (associationText, isRed) => {
    if (isRed) {
      gameState.associationRed.push(associationText);
    } else {
      gameState.associationBlue.push(associationText);
    }
    gameState.gameStage++;
    io.emit("nextGameStage", gameState.gameStage);
    io.emit("newAssociation", gameState);
  });

  socket.on("chooseRole", (role) => {
    if (role === "master" && !gameState.master) {
      gameState.master = socket.id;
      socket.emit("roleAssigned", "master");
    } else if (role === "player") {
      gameState.players.push(socket.id);
      socket.emit("roleAssigned", "player");
    } else {
      socket.emit("error", "Role is not available.");
    }

    io.emit("updatePlayers", gameState);
  });

  socket.on("startGame", () => {
    if (gameState.players.length > 0 && gameState.master) {
      const cardTypes = [
        "red",
        "red",
        "red",
        "red",
        "red",
        "red",
        "red",
        "red",
        "red",
        "blue",
        "blue",
        "blue",
        "blue",
        "blue",
        "blue",
        "blue",
        "blue",
        "black",
        "white",
        "white",
        "white",
        "white",
        "white",
        "white",
        "white",
      ];

      const shuffleWords = shuffleArray(wordList).slice(0, 25);
      const shuffleCardTypes = shuffleArray(cardTypes);
      gameState.cards = [];
      for (let i = 0; i < 25; i++) {
        gameState.cards.push({
          word: shuffleWords[i],
          type: shuffleCardTypes[i],
          revealed: false,
        });
      }
      gameState.gameStage = 0;
      gameState.redLeft = 9;
      gameState.blueLeft = 8;
      gameState.associationRed = [];
      gameState.associationBlue = [];
      gameState.gameOver = false;
      io.emit("gameStarted", gameState);
    } else {
      socket.emit("error", "Не хватает игроков или мастера");
    }
  });
  // gameStage % 4 == 0 - загадывает красный;
  // gameStage % 4 == 1 - отгадывает красный;
  // gameStage % 4 == 2 - загадывает синий;
  // gameStage % 4 == 3 - отгадывает синий;
  // начинается игра - запуск таймера (1:45). gameStage = 0
  // отправлена ассоциация - запуск таймера (1:30). gameStage++
  // revealWord; правильно отгадано - таймер +15 секунд; неправильно отгадано - запуск таймера (1:45), gameStage++
  socket.on("revealWord", (word) => {
    for (let i = 0; i < gameState.cards.length; i++) {
      if (gameState.cards[i].word == word && !gameState.cards[i].revealed) {
        gameState.cards[i].revealed = true;
        switch (gameState.cards[i].type) {
          case "black":
            gameState.gameOver = true;
            break;
          case "blue":
            gameState.blueLeft--;
            gameState.gameOver = gameState.blueLeft == 0 ? true : false;
            if (gameState.gameStage % 4 == 1) {
              gameState.gameStage++;
              io.emit("nextGameStage", gameState.gameStage);
            } else {
              io.emit("addTime");
            }
            break;
          case "red":
            gameState.redLeft--;
            gameState.gameOver = gameState.redLeft == 0 ? true : false;
            if (gameState.gameStage % 4 == 3) {
              gameState.gameStage++;
              io.emit("nextGameStage", gameState.gameStage);
            } else {
              io.emit("addTime");
            }
            break;
          default:
            gameState.gameStage++;
            io.emit("nextGameStage", gameState.gameStage);
            break;
        }
        io.emit("wordRevealed", gameState);
      }
    }
  });

  socket.on("disconnect", () => {
    console.log("Отключение: ", socket.id);
    gameState.players = gameState.players.filter((id) => id !== socket.id);
    if (gameState.master === socket.id) gameState.master = null;
    io.emit("updatePlayers", gameState);
  });
});

function getLocalIP() {
  const { networkInterfaces } = require("os");
  const nets = networkInterfaces();
  for (const name of Object.keys(nets)) {
    for (const net of nets[name]) {
      if (net.family === "IPv4" && !net.internal) {
        return net.address;
      }
    }
  }
  return "127.0.0.1";
}

server.listen(PORT, "0.0.0.0", () => {
  console.log(`Сервер запущен на http://localhost:${PORT}`);
  console.log(`Доступен в сети по адресу: http://192.168.0.132:${PORT}`);
  // console.log(`Доступен в сети по адресу: http://${getLocalIP()}:${PORT}`);
});

function shuffleArray(array) {
  return array.sort(() => Math.random() - 0.5);
}

app.use(express.static("client"));

app.get("api/gameState", (req, res) => {
  res.json(gameState);
});
